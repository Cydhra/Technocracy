buildscript {
    ext.mod_id = 'technocracy.foundation'

}

jar {
    manifest {
        attributes 'FMLAT': 'technocracy_at.cfg'
    }
}

apply plugin: 'idea'

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modid':mod_id
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

//
// the following tasks are a workaround for IntelliJ's habbit of keeping built classes and resources apart, which 
// breaks an assumption of forge's resource loader thus assets cannot be found while running the mod inside IntelliJ.
//

task delOriginalAssets(type: Delete) {
    delete "$project.buildDir/resources"
}

task copyAssets(type: Copy) {
    from("$project.buildDir/resources")
    into("$project.buildDir/classes/kotlin")

    finalizedBy delOriginalAssets
}


build.finalizedBy(copyAssets)

// there is no point in not reobfuscating the generated jar file
jar.finalizedBy("reobfJar")

